# This workflow requires an approval, and based on that, it destroys our environment's infrastructure.
name: destroy
run-name: ${{ github.workflow }}
on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        required: true
        description: "Specify the environment to be destroyed"

# Cancel in-progress workflows that have the same environment.
# By default, the newly triggered workflow will fail because another deployment has the Terraform lock.
# So we override this and always deploy the most recently triggered workflow.
concurrency:
  group: ${{ github.workflow }}-${{ github.event.inputs.environment }}
  cancel-in-progress: true

jobs:
  # Require approval in the form of an open issue in order to destroy the infrastructure.
  approve:
    name: approve-infra-teardown
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }} # set environment - easier for OIDC management
    permissions:
      issues: write
    steps:
      - name: Manual Workflow Approval
        uses: trstringer/manual-approval@v1.8.0
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: christosgalano
          minimum-approvals: 1
          issue-title: "Approve infrastructure teardown for the ${{ inputs.environment }} environment"
          exclude-workflow-initiator-as-approver: false

  # Destroy the infrastructure.
  destroy:
    name: destroy
    needs: approve
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}/terraform/environments/${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform init
        run: terraform init

      - name: Terraform destroy
        run: |
          terraform apply -destroy -no-color -auto-approve \
            -var="client_id=${{ secrets.CLIENT_ID }}" \
            -var="tenant_id=${{ secrets.TENANT_ID }}" \
            -var="subscription_id=${{ secrets.SUBSCRIPTION_ID }}"
